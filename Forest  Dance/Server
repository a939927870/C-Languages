// Server.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

#include "stdafx.h"
#include <stdio.h>
#include <winsock2.h>

#pragma comment(lib,"ws2_32.lib")

int main(int argc, char* argv[])
{
    //初始化WSA
    WORD sockVersion = MAKEWORD(2,2);
    WSADATA wsaData;
    if(WSAStartup(sockVersion, &wsaData)!=0)
    {
        return 0;
    }
	
    //创建套接字
    SOCKET slisten = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
    if(slisten == INVALID_SOCKET)
    {
        printf("socket error !");
        return 0;
    }
	
    //绑定IP和端口
    sockaddr_in sin;
    sin.sin_family = AF_INET;
    sin.sin_port = htons(32000);
    sin.sin_addr.S_un.S_addr = INADDR_ANY; 
	
    if(bind(slisten, (LPSOCKADDR)&sin, sizeof(sin)) == SOCKET_ERROR)
    {
        printf("bind error !");
    }
	
    //开始监听
    if(listen(slisten, 5) == SOCKET_ERROR)
    {
        printf("listen error !");
        return 0;
    }
	
    //循环接收数据
    SOCKET sClient;
    sockaddr_in remoteAddr;
    int nAddrlen = sizeof(remoteAddr);
    char revData[500]; 
	
	printf("等待连接...\n");
	sClient = accept(slisten, (SOCKADDR *)&remoteAddr, &nAddrlen);
	
	if(sClient == INVALID_SOCKET)
	{
		printf("accept error !");
	}
	printf("接受到一个连接：%s \n", inet_ntoa(remoteAddr.sin_addr));
	
    while (true)
    {
		Sleep(1000);
        //接收数据
        int ret = recv(sClient, revData, sizeof(revData), 0);   
		
        if(ret > 0)
        {
            revData[ret] = 0x00;
            printf(revData);
        }
		
		/*
        //发送数据
        char * sendData = "你好，TCP客户端！\n";
        send(sClient, sendData, strlen(sendData), 0);
		*/
		
    }
	
    closesocket(sClient);
    closesocket(slisten);
    WSACleanup();
	
    return 0;
}
